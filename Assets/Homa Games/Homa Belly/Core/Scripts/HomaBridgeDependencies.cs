using System;
using System.Collections.Generic;
using System.IO;
using System.Text;
using UnityEditor;
using UnityEngine;

namespace HomaGames.HomaBelly
{
    public partial class HomaBellyAutogeneratedDependencies
    {
        private const string AUTO_GENERATED_SCRIPTS_PARENT_FOLDER = "Assets/Homa Games/Homa Belly/Core/Scripts/Auto Generated Code/";
        
        private static readonly List<IMediator> mediators = new List<IMediator>();
        private static readonly List<IAttribution> attributions = new List<IAttribution>();
        private static readonly List<IAnalytics> analytics = new List<IAnalytics>();

        public static List<IMediator> Mediators => mediators;
        public static List<IAttribution> Attributions => attributions;
        public static List<IAnalytics> Analytics => analytics;

        [MenuItem("Tools/Homa Belly/Generate Dependencies")]
        //[InitializeOnLoadMethod]
        private static void AutoGenerateCode()
        {
            AutoGenerateInitializationFile("HomaBellyAutogeneratedDependenciesMediators",
                nameof(PartialInitializeMediators),
                nameof(mediators),
                typeof(IMediator));
            
            AutoGenerateInitializationFile("HomaBellyAutogeneratedDependenciesAttributions",
                nameof(PartialInitializeAttributions),
                nameof(attributions),
                typeof(IAttribution));
            
            AutoGenerateInitializationFile("HomaBellyAutogeneratedDependenciesAnalytics",
                nameof(PartialInitializeAnalytics),
                nameof(analytics),
                typeof(IAnalytics));
        }

        static partial void PartialInitializeMediators();
        static partial void PartialInitializeAttributions();
        static partial void PartialInitializeAnalytics();

        
        // Note: Because partial methods have to be private, I had to create public static methods
        public static void InstantiateMediators()
        {
            PartialInitializeMediators();
        }

        public static void InstantiateAttributions()
        {
            PartialInitializeAttributions();
        }
        
        public static void InstantiateAnalytics()
        {
            PartialInitializeAnalytics();
        }

        private static void AutoGenerateInitializationFile(string fileName,string methodName,string servicesListName,Type serviceType)
        {
            var availableMediators = Reflection.GetHomaBellyAvailableClasses(serviceType);
            if (availableMediators != null && availableMediators.Count > 0)
            {
                if (!Directory.Exists(AUTO_GENERATED_SCRIPTS_PARENT_FOLDER))
                {
                    Directory.CreateDirectory(AUTO_GENERATED_SCRIPTS_PARENT_FOLDER);
                }
                
                Debug.Log($"[HomaBelly] Auto generating code for {serviceType}. File: {fileName}");

                var completeFilePath = $"{AUTO_GENERATED_SCRIPTS_PARENT_FOLDER}{fileName}.cs";
                using var streamWriter = new StreamWriter(File.Create(completeFilePath));
                streamWriter.WriteLine($"namespace HomaGames.HomaBelly");
                streamWriter.WriteLine("{");
                streamWriter.WriteLine($"\t public partial class {nameof(HomaBellyAutogeneratedDependencies)}");
                streamWriter.WriteLine("\t {");
                streamWriter.WriteLine($"\t \t static partial void {methodName}()");
                streamWriter.WriteLine("\t \t {");
                
                foreach (var type in availableMediators)
                {
                    streamWriter.WriteLine($"\t\t\t {servicesListName}.Add(new {type.Name}());");
                }

                streamWriter.WriteLine("\t \t }");
                streamWriter.WriteLine("\t }");
                streamWriter.WriteLine("}");
            }

            AssetDatabase.Refresh();
        }
    }
}